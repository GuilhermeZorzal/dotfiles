#!/bin/sh
draw() {
  kitten icat --stdin no --transfer-mode memory --place "${w}x${h}@${x}x${y}" "$1" </dev/null >/dev/tty
  exit 1
}

file="$1"
w="$2"
h="$3"
x="$4"
y="$5"

handle_extension() {
  file_extension="${file##*.}"
  file_extension_lower=$(echo ${file_extension} | tr '[:upper:]' '[:lower:]')
  let pv_width="${2} - 2" # Width of the preview pane (number of fitting characters)
  case "${file_extension_lower}" in
  ## Archive
  a | ace | alz | arc | arj | bz | bz2 | cab | cpio | deb | gz | jar | lha | lz | lzh | lzma | lzo | \
    rpm | rz | t7z | tar | tbz | tbz2 | tgz | tlz | txz | tZ | tzo | war | xpi | xz | Z | zip)
    atool --list -- "${file}" && exit 5
    bsdtar --list --file "${file}" && exit 5
    exit 1
    ;;
  rar)
    ## Avoid password prompt by providing empty password
    unrar lt -p- -- "${file}" && exit 5
    exit 1
    ;;
  7z)
    ## Avoid password prompt by providing empty password
    7z l -p -- "${file}" && exit 5
    exit 1
    ;;

  ## PDF
  pdf)
    ## Preview as text conversion
    # Preview as text conversion
    pdftotext -l 5 -nopgbrk -layout -q -- "${file}" - && exit 0
    mediainfo "${file}" && exit 0

    exiftool "${file}" && exit 0
    exit 0
    ;;
    # pdftotext -l 10 -nopgbrk -q -- "${file}" - | \
    #   fmt -w "${pv_width}" && exit 5
    # mutool draw -F txt -i -- "${file}" 1-10 | \
    #   fmt -w "${pv_width}" && exit 5
    # exiftool "${file}" && exit 5
    # exit 1;;

  ## BitTorrent
  torrent)
    transmission-show -- "${file}" && exit 5
    exit 1
    ;;

  ## OpenDocument
  odt | ods | odp | sxw)
    ## Preview as text conversion
    odt2txt "${file}" && exit 5
    ## Preview as markdown conversion
    pandoc -s -t markdown -- "${file}" && exit 5
    exit 1
    ;;

  ## XLSX
  xlsx)
    ## Preview as csv conversion
    ## Uses: https://github.com/dilshod/xlsx2csv
    xlsx2csv -- "${file}" && exit 5
    exit 1
    ;;

  ## HTML
  htm | html | xhtml)
    ## Preview as text conversion
    w3m -dump "${file}" && exit 5
    lynx -dump -- "${file}" && exit 5
    elinks -dump "${file}" && exit 5
    pandoc -s -t markdown -- "${file}" && exit 5
    ;;

  ## JSON
  json | jsonc)
    jq --color-output . "${file}" && exit 5
    python -m json.tool -- "${file}" && exit 5
    ;;

  ## Direct Stream Digital/Transfer (DSDIFF) and wavpack aren't detected
  ## by file(1).
  dff | dsf | wv | wvc)
    mediainfo "${file}" && exit 5
    exiftool "${file}" && exit 5
    ;; # Continue with next handler on failure

  jsx | js | css | java | exs | py)
    bat --color=always --theme=ansi --style=plain "${file}" && exit 5
    # nvim -c "syntax enable" -c "set nowrap" -c "set noswapfile" -c "set norelativenumber" -c "set number" -c "set cursorline" "${file}" && exit 5
    bat --style=plain --color=always "${file}" && exit 5
    ;;
  esac
}

handle_mime() {
  case "$(file -Lb --mime-type "$file")" in
  image/*)
    draw "$file"
    ;;
  video/*)
    # vidthumb is from here:
    # https://raw.githubusercontent.com/duganchen/kitty-pistol-previewer/main/vidthumb
    draw "$(vidthumb "$file")"
    ;;
  text/*)
    bat --color=always --theme=ansi --style=plain "$1" && exit 5
    ;;
    # *)
    #   bat --color=always --theme=ansi --style=plain "$1" && exit 5
    #   ;;
  esac
}

handle_fallback() {
  printf "=====================\n==  file type  ==\n=====================\n\n" && file --dereference --brief -n -- "${FILE_PATH}" | sed 's/,\ /\n/g' | fold -w "${PV_WIDTH}"
  exit 0
}

handle_extension "$file"
handle_mime "$file"
handle_fallback "$file"

pistol "$file"
